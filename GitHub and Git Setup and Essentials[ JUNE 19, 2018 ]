### GitHub 和 Git 的安装以及要点
作者: robinwieruch  
原文地址: https://www.robinwieruch.de/git-essential-commands/
  这个月，所有我的文章都由 TRUMPF Laser GmbH 所赞助。  
  我所在的工作德国公司正在生产环境中应用一个复杂的React 和 GraphQL 以及.NET tech 技术栈，去给他们来自世界各地的客户代带来高度可配置化的镭射设备用户界面。
  这些web应用一一运行在嵌入式系统中，同时作为原生应用运行在大量设备中。
    
   
当你开始使用Git的时候，它确实会让人望而却步。首先，分布式版本管理系统的想法和它的好处对于所有人并不是很清晰。其次，它有许多在命令行里用来控制Git的额外选项。
它确实会很吓人。
然而你不并不需要Git里有的复杂组合命令和选项, 对于我来说只有真正几个关键的命令在web开发中使用到。其他选项可能在处理复杂问题的时候才用到。  
在这篇文章中，我想给你简明的Git和Github的入门，如何开始使用以及怎么使用Git。之后我想展示我在十年web开发中使用的实用命令。它不是什么黑魔法，不必要对此害怕。


##### 为什么选择Git和GitHub
Git是一个版本控制系统，用于跟踪多台机器上的对文件以及文件夹, 大多数时候，这些文件和软件相关，比如说一些应用的源代码，不过它不仅仅用于软件相关的方面，
我已经遇到过许多作家以及内容营销人员使用Git去组织他们的文件以及用来与其他人合作。  
这些文件和文件夹都汇总成一个仓库(repository)，许多人可以在一个仓库上进行多人协作工作。
基本上来说，一个仓库是你项目在Git和GitHub的一个容器。
人们可以做一份仓库在本地拷贝，修改文件，以及同步所有的改动到远程仓库。
所有的合作者可以从远程仓库拉下来最新的改动到他们的本地仓库。  
然而Git是基于命令行来执行pull，modify 和 push 操作的，Github 是一个基于web的Git 平台，你可以在再Github上创建仓库，还可以与你在本地电脑上的项目
进行同步。之后，你可以在命令行使用Git去执行命令。  

##### 远程仓库 VS 本地仓库？
在Github里，一个人或者一个组织（例如：Facebook，Airbnb）可以拥有一个仓库。这些仓库可以有源代码、markdown文件、或者其他内容的文件或者整个文件项目结构。
除非整个仓库是私有的，每个人都有这个仓库的读取权限。它是一个远程仓库，因为它是你从本地机器上克隆分散出来的。  
当然每个人都能够从远程仓库复制一份代码到他们的本地。它就成为了一个本地仓库。你可以在你本地仓库上作出不在远程仓库上立刻显示出来的改动。你决定什么时候
你想把它合并到远程的仓库。
当地的仓库可以用来对源代码的测试、添加新的功能以及修复问题。最后这些本地的改动将会被merge回远程仓库。 然而，项目的参与者首先必须有对这个仓库的写入
权限。
分散的仓库，让所有具有读写权限的人作为一个小组在同一个仓库上协同合作成为了可能。一个本地的仓库是用来做更改展示，然而远程仓库是真理的唯一源泉。  
Github提供仓库私有化，但是你必须去升级支付你的Gihutb账号，一旦你的Github信息更新了，你就可以更新任何仓库只针对你可见。  

##### 开始使用Git 以及 GitHub
现在你了解了Git和GitHub了，你会在想怎么去使用它。在一堆教程和Github官网的指导下会非常简单。
首先，访问Github冰创建一个账号，然后你需要在电脑命令行上安装Git。每个操作系统都应该有一个默认命令行，但是你可以查看[开发者安装向导](https://www.robinwieruch.de/developer-setup/)
去了解我的安装配置。第三，我强烈推荐安装SSH在你的GitHub上，它不是必须的，但是保证你访问Github的安全，它可以解放当你在推送本地改动到远程时需要做的账号验证
等大量无聊的工作。  
最后，也是重要的一点，在GitHub上探索以及社交。你可以通过访问不同人和组织的简介来访问不同的仓库。你可以watch 和 star特定的仓库来获取这个仓库的更新以及
对它显示对它的赞赏。你甚至可以可以作为一个开源贡献者为仓库做出自己的贡献。   

##### 使用Git和GitHub初始化一个仓库
在开始的时候，你需要去创建一个Git仓库，你可以通过

    git init
在你本地的项目执行这个命令行操作。  
一个本地仓库有一个.git文件存放所有的信息。举个例子：commit 历史，仓库保存情况。一个 .gitignore文件可以增加忽略特定的文件，用于哪些不应该被加入
到远程的。被忽略的文件仅仅存在你本地的仓库。
    
    git init
    touch .gitignore
举个例子，你或许想要忽略.env文件，它用来存储一些你项目或者node_module/folder中的敏感环境变量，你可以这样做:
    
    .env
    node_module
当你使用了git init命令之后，你可以在Github上创建一个仓库。在这个仓库里，你可以给它命名，给它一些额外的描述以及license（例如MIT）。
不要使用单选框去增加一个README.md，让单选框先不要点击。接下来你可以获得链接你本地仓库到你远程仓库的指导。  
